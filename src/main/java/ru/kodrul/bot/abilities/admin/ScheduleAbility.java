package ru.kodrul.bot.abilities.admin;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Component;
import org.telegram.abilitybots.api.bot.AbilityBot;
import org.telegram.abilitybots.api.objects.Ability;
import org.telegram.abilitybots.api.util.AbilityExtension;
import ru.kodrul.bot.entity.ChatGroup;
import ru.kodrul.bot.entity.ScheduledPost;
import ru.kodrul.bot.services.GroupManagementService;
import ru.kodrul.bot.services.ScheduledPostService;

import java.util.List;
import java.util.Optional;

import static org.telegram.abilitybots.api.objects.Locality.GROUP;
import static org.telegram.abilitybots.api.objects.Privacy.ADMIN;
import static org.telegram.abilitybots.api.objects.Privacy.PUBLIC;

@Slf4j
@Component
@RequiredArgsConstructor
public class ScheduleAbility implements AbilityExtension {

    @Lazy
    private final AbilityBot abilityBot;
    private final ScheduledPostService scheduledPostService;
    private final GroupManagementService groupManagementService;

    public Ability createScheduleAbility() {
        return Ability.builder()
                .name("createschedule")
                .info("–°–æ–∑–¥–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ - —É–∫–∞–∂–∏—Ç–µ –≥—Ä—É–ø–ø—É, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –∞ –∑–∞—Ç–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ")
                .locality(GROUP)
                .privacy(ADMIN)
                .action(ctx -> {
                    String fullText = ctx.update().getMessage().getText();
                    String[] parts = fullText.split("\\s+", 4);

                    if (parts.length < 4) {
                        sendScheduleHelp(ctx.chatId());
                        return;
                    }

                    try {
                        String groupName = parts[1];
                        String scheduleInput = parts[2];
                        String restOfText = parts[3];

                        String messageText;
                        String imageUrl = null;

                        String[] textParts = restOfText.split("\\s+");
                        if (textParts.length > 1 &&
                                (textParts[textParts.length - 1].startsWith("http://") ||
                                        textParts[textParts.length - 1].startsWith("https://"))) {
                            imageUrl = textParts[textParts.length - 1];
                            messageText = restOfText.substring(0, restOfText.lastIndexOf(imageUrl)).trim();
                        } else {
                            messageText = restOfText;
                        }

                        ScheduledPost schedule = scheduledPostService.createSchedule(
                                ctx.chatId(), groupName, scheduleInput, messageText, imageUrl, ctx.user().getId()
                        );

                        String response = String.format(
                                """
                                        ‚úÖ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ!*

                                        üìã *–ì—Ä—É–ø–ø–∞:* %s
                                        üìÖ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:* %s
                                        üí¨ *–°–æ–æ–±—â–µ–Ω–∏–µ:* %s
                                        %s\
                                        üÜî *ID:* %d""",
                                groupName,
                                schedule.getDescription(),
                                messageText,
                                imageUrl != null ? "üñºÔ∏è *–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:* –µ—Å—Ç—å\n" : "",
                                schedule.getId()
                        );

                        abilityBot.silent().sendMd(response, ctx.chatId());

                    } catch (IllegalArgumentException e) {
                        abilityBot.silent().send("‚ùå " + e.getMessage() + "\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /schedulehelp –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏", ctx.chatId());
                    } catch (Exception e) {
                        log.error("Error creating schedule", e);
                        abilityBot.silent().send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è: " + e.getMessage(), ctx.chatId());
                    }
                })
                .build();
    }

    public Ability scheduleHelpAbility() {
        return Ability.builder()
                .name("schedulehelp")
                .info("–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π")
                .locality(GROUP)
                .privacy(PUBLIC)
                .action(ctx -> sendScheduleHelp(ctx.chatId()))
                .build();
    }

    public Ability listSchedulesAbility() {
        return Ability.builder()
                .name("listschedules")
                .info("–ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞")
                .locality(GROUP)
                .privacy(ADMIN)
                .action(ctx -> {
                    List<ScheduledPost> schedules = scheduledPostService.getActiveSchedulesForChat(ctx.chatId());

                    if (schedules.isEmpty()) {
                        abilityBot.silent().send("üì≠ –í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π", ctx.chatId());
                        return;
                    }

                    StringBuilder response = new StringBuilder("üìÖ –ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:\n\n");

                    for (ScheduledPost schedule : schedules) {
                        response.append("üÜî ID: ").append(schedule.getId()).append("\n")
                                .append("üìã –ì—Ä—É–ø–ø–∞: ").append(schedule.getGroupName()).append("\n")
                                .append("üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: ").append(schedule.getDescription()).append("\n")
                                .append("üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ").append(
                                        schedule.getMessageText().length() > 50 ?
                                                schedule.getMessageText().substring(0, 50) + "..." :
                                                schedule.getMessageText()
                                ).append("\n");

                        if (schedule.getImageUrl() != null) {
                            response.append("üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: –µ—Å—Ç—å\n");
                        }

                        if (schedule.getLastSent() != null) {
                            response.append("‚úÖ –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—Ç–ø—Ä–∞–≤–∫–∞: ").append(schedule.getLastSent().toLocalDate()).append("\n");
                        }

                        response.append("\n");
                    }

                    abilityBot.silent().send(response.toString(), ctx.chatId());
                })
                .build();
    }

    public Ability listGroupSchedulesAbility() {
        return Ability.builder()
                .name("listgroupschedules")
                .info("–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≥—Ä—É–ø–ø—ã")
                .locality(GROUP)
                .privacy(PUBLIC)
                .input(1)
                .action(ctx -> {
                    String[] args = ctx.arguments();
                    if (args.length < 1) {
                        abilityBot.silent().send("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /listgroupschedules <–Ω–∞–∑–≤–∞–Ω–∏–µ_–≥—Ä—É–ø–ø—ã>", ctx.chatId());
                        return;
                    }

                    try {
                        String groupName = args[0];
                        Long chatId = ctx.chatId();

                        Optional<ChatGroup> groupOpt = groupManagementService.getGroupByName(chatId, groupName);
                        if (groupOpt.isEmpty()) {
                            abilityBot.silent().send("‚ùå –ì—Ä—É–ø–ø–∞ '" + groupName + "' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —ç—Ç–æ–º —á–∞—Ç–µ", ctx.chatId());
                            return;
                        }

                        List<ScheduledPost> schedules = scheduledPostService.getActiveSchedulesForGroup(chatId, groupName);

                        if (schedules.isEmpty()) {
                            abilityBot.silent().send("üì≠ –í –≥—Ä—É–ø–ø–µ '" + groupName + "' –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π", ctx.chatId());
                            return;
                        }

                        StringBuilder response = new StringBuilder();
                        response.append("üìÖ *–ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –≥—Ä—É–ø–ø—ã '").append(groupName).append("':*\n\n");

                        for (ScheduledPost schedule : schedules) {
                            response.append("üÜî *ID:* ").append(schedule.getId()).append("\n")
                                    .append("‚è∞ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:* ").append(schedule.getDescription()).append("\n")
                                    .append("üí¨ *–°–æ–æ–±—â–µ–Ω–∏–µ:* ").append(
                                            schedule.getMessageText().length() > 50 ?
                                                    schedule.getMessageText().substring(0, 50) + "..." :
                                                    schedule.getMessageText()
                                    ).append("\n");

                            if (schedule.getImageUrl() != null) {
                                response.append("üñºÔ∏è *–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:* –µ—Å—Ç—å\n");
                            }

                            if (schedule.getLastSent() != null) {
                                response.append("‚úÖ *–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—Ç–ø—Ä–∞–≤–∫–∞:* ").append(schedule.getLastSent().toLocalDate()).append("\n");
                            }

                            response.append("üìä *–°—Ç–∞—Ç—É—Å:* ").append(schedule.getIsActive() ? "–∞–∫—Ç–∏–≤–Ω–æ ‚úÖ" : "–Ω–µ–∞–∫—Ç–∏–≤–Ω–æ ‚è∏Ô∏è").append("\n");

                            response.append("\n");
                        }

                        response.append("üí° *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è–º–∏:*\n")
                                .append("/toggleschedule <ID> on/off - –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å\n")
                                .append("/deleteschedule <ID> - —É–¥–∞–ª–∏—Ç—å\n")
                                .append("/scheduleinfo <ID> - –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è");

                        abilityBot.silent().sendMd(response.toString(), ctx.chatId());

                    } catch (Exception e) {
                        log.error("Error listing group schedules for chat {}: {}", ctx.chatId(), e.getMessage(), e);
                        abilityBot.silent().send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π –≥—Ä—É–ø–ø—ã: " + e.getMessage(), ctx.chatId());
                    }
                })
                .build();
    }

    public Ability toggleScheduleAbility() {
        return Ability.builder()
                .name("toggleschedule")
                .info("–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
                .locality(GROUP)
                .privacy(ADMIN)
                .input(2)
                .action(ctx -> {
                    String[] args = ctx.arguments();
                    if (args.length < 2) {
                        abilityBot.silent().send("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /toggleschedule <ID —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è> <on|off>", ctx.chatId());
                        return;
                    }

                    try {
                        Long scheduleId = Long.parseLong(args[0]);
                        boolean isActive = "on".equalsIgnoreCase(args[1]);

                        scheduledPostService.toggleSchedule(scheduleId, isActive);

                        abilityBot.silent().send(
                                isActive ? "‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ" : "‚è∏Ô∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ",
                                ctx.chatId()
                        );

                    } catch (NumberFormatException e) {
                        abilityBot.silent().send("‚ùå ID —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º", ctx.chatId());
                    } catch (IllegalArgumentException e) {
                        abilityBot.silent().send("‚ùå " + e.getMessage(), ctx.chatId());
                    } catch (Exception e) {
                        abilityBot.silent().send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è", ctx.chatId());
                    }
                })
                .build();
    }

    public Ability deleteScheduleAbility() {
        return Ability.builder()
                .name("deleteschedule")
                .info("–£–¥–∞–ª–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
                .locality(GROUP)
                .privacy(ADMIN)
                .input(1)
                .action(ctx -> {
                    String[] args = ctx.arguments();
                    if (args.length < 1) {
                        abilityBot.silent().send("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /deleteschedule <ID —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è>", ctx.chatId());
                        return;
                    }

                    try {
                        Long scheduleId = Long.parseLong(args[0]);

                        scheduledPostService.deleteSchedule(scheduleId);

                        abilityBot.silent().send("üóëÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ", ctx.chatId());

                    } catch (NumberFormatException e) {
                        abilityBot.silent().send("‚ùå ID —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º", ctx.chatId());
                    } catch (IllegalArgumentException e) {
                        abilityBot.silent().send("‚ùå " + e.getMessage(), ctx.chatId());
                    } catch (Exception e) {
                        abilityBot.silent().send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è", ctx.chatId());
                    }
                })
                .build();
    }

    public Ability scheduleInfoAbility() {
        return Ability.builder()
                .name("scheduleinfo")
                .info("–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏")
                .locality(GROUP)
                .privacy(ADMIN)
                .input(1)
                .action(ctx -> {
                    String[] args = ctx.arguments();
                    if (args.length < 1) {
                        abilityBot.silent().send("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /scheduleinfo <ID —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è>", ctx.chatId());
                        return;
                    }

                    try {
                        Long scheduleId = Long.parseLong(args[0]);
                        Optional<ScheduledPost> scheduleOpt = scheduledPostService.findById(scheduleId);

                        if (scheduleOpt.isPresent()) {
                            ScheduledPost schedule = scheduleOpt.get();

                            StringBuilder response = new StringBuilder();
                            response.append("üìä *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏:*\n\n")
                                    .append("üÜî *ID:* ").append(schedule.getId()).append("\n")
                                    .append("üìã *–ì—Ä—É–ø–ø–∞:* ").append(schedule.getGroupName()).append("\n")
                                    .append("üìÖ *–û–ø–∏—Å–∞–Ω–∏–µ:* ").append(schedule.getDescription()).append("\n")
                                    .append("‚öôÔ∏è *Cron –≤—ã—Ä–∞–∂–µ–Ω–∏–µ:* `").append(schedule.getCronExpression()).append("`\n")
                                    .append("üí¨ *–°–æ–æ–±—â–µ–Ω–∏–µ:* ").append(schedule.getMessageText()).append("\n")
                                    .append("üñºÔ∏è *–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:* ").append(schedule.getImageUrl() != null ? "–µ—Å—Ç—å" : "–Ω–µ—Ç").append("\n")
                                    .append("üìä *–°—Ç–∞—Ç—É—Å:* ").append(schedule.getIsActive() ? "–∞–∫—Ç–∏–≤–Ω–æ" : "–Ω–µ–∞–∫—Ç–∏–≤–Ω–æ").append("\n")
                                    .append("üë§ *–°–æ–∑–¥–∞–Ω–æ:* ").append(schedule.getCreatedBy()).append("\n")
                                    .append("üìÖ *–°–æ–∑–¥–∞–Ω–æ:* ").append(schedule.getCreatedAt().toLocalDate()).append("\n");

                            if (schedule.getLastSent() != null) {
                                response.append("‚úÖ *–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—Ç–ø—Ä–∞–≤–∫–∞:* ").append(schedule.getLastSent()).append("\n");
                            }

                            abilityBot.silent().sendMd(response.toString(), ctx.chatId());
                        } else {
                            abilityBot.silent().send("‚ùå –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å ID " + scheduleId + " –Ω–µ –Ω–∞–π–¥–µ–Ω–æ", ctx.chatId());
                        }

                    } catch (NumberFormatException e) {
                        abilityBot.silent().send("‚ùå ID —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º", ctx.chatId());
                    } catch (Exception e) {
                        abilityBot.silent().send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏", ctx.chatId());
                    }
                })
                .build();
    }

    private void sendScheduleHelp(Long chatId) {
        String helpText = """
            üìÖ *–°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π*
            
            *–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:*
            `/createschedule <–≥—Ä—É–ø–ø–∞> <—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ> <—Å–æ–æ–±—â–µ–Ω–∏–µ>`
            
            *–ü—Ä–æ—Å—Ç—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:*
            ‚Ä¢ `09:00` - –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 9:00
            ‚Ä¢ `–ø–Ω,—Å—Ä,–ø—Ç 09:00` - –ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º, —Å—Ä–µ–¥–∞–º –∏ –ø—è—Ç–Ω–∏—Ü–∞–º –≤ 9:00
            ‚Ä¢ `1,15 09:00` - 1 –∏ 15 —á–∏—Å–ª–∞ –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—è—Ü–∞ –≤ 9:00
            ‚Ä¢ `–µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ –≤c 12:00` - –∫–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 12:00
            
            *Cron-–≤—ã—Ä–∞–∂–µ–Ω–∏—è (–¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö):*
            ‚Ä¢ `0 0 9 * * ?` - –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 9:00
            ‚Ä¢ `0 0 9 ? * MON,WED,FRI` - –ø–æ –ø–Ω, —Å—Ä, –ø—Ç –≤ 9:00
            ‚Ä¢ `0 0 9 1 * ?` - –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –º–µ—Å—è—Ü–∞ –≤ 9:00
            ‚Ä¢ `0 0 12 ? * SUN` - –∫–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 12:00
            
            *–î–Ω–∏ –Ω–µ–¥–µ–ª–∏:* –ø–Ω, –≤—Ç, —Å—Ä, —á—Ç, –ø—Ç, —Å–±, –≤—Å
            
            *–î—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã:*
            ‚Ä¢ `/listschedules` - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≤ —á–∞—Ç–µ
            ‚Ä¢ `/listgroupschedules <–≥—Ä—É–ø–ø–∞>` - –ø–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≥—Ä—É–ø–ø—ã
            ‚Ä¢ `/scheduleinfo <ID>` - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏
            ‚Ä¢ `/toggleschedule <ID> <on|off>` - –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å
            ‚Ä¢ `/deleteschedule <ID>` - —É–¥–∞–ª–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
            
            *–ü—Ä–∏–º–µ—Ä—ã:*
            `/createschedule –¢–µ—Å—Ç 09:00 –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ!`
            `/createschedule –°–æ–∑–≤–æ–Ω –ø–Ω,—Å—Ä,–ø—Ç 10:30 –í—Ä–µ–º—è —Å–æ–∑–≤–æ–Ω–∞!`
            `/createschedule –û—Ç—á–µ—Ç 1 09:00 –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –æ—Ç—á–µ—Ç`
            `/listgroupschedules –¢–µ—Å—Ç` - –ø–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã "–¢–µ—Å—Ç"
            
            *–î–ª—è URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ –∫–æ–Ω—Ü–µ*
            """;

        abilityBot.silent().sendMd(helpText, chatId);
    }
}